package analizadores;
import java_cup.runtime.Symbol;

parser code{:
    public boolean flag = false;
    public static String postfija = "";
    public String salida = "";
    
    public void syntax_error (Symbol s){
        Scanner.Err += "Error Leve. Línea " + (s.right) + " Columna " + (s.left) + ". Identificador " + s.value;
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        Scanner.Err += "Error Grave. Línea " + (s.right) + " Columna " + (s.left) + ". Identificador " + s.value;
    }
    public void setSalida(Object cadena){
        System.out.println(cadena.toString());
        salida = cadena.toString();
    }
:}

action code
{:
:}
/*Terminales*/
terminal String SEMICOLON, IZQ, DER, PLUS, MINUS, PRODUCT, DIVISION, LETTER, NUMBER;

/*No Terminales*/
non terminal INICIO, TERMINO, SUBINICIO;

/*Precedencia*/
precedence left PLUS, MINUS;
precedence left PRODUCT, DIVISION;

/*Gramatica*/
start with INICIO;

INICIO::= SUBINICIO:a 
                    {:
                    setSalida(a);
                    :};
SUBINICIO::= SUBINICIO:a TERMINO:b SEMICOLON 
                    {:
                    RESULT=a+"\n"+postfija+(flag ? "" :  " = "+b); 
                    postfija = "";
                    flag=false;
                    :}
| TERMINO:b SEMICOLON 
                    {:
                    RESULT=postfija+(flag ? "" :  " = "+b);
                    postfija = "";
                    flag=false;
                    :};
TERMINO::= TERMINO:a PLUS TERMINO:b 
                    {:
                    if(!flag){
                        RESULT=String.valueOf(Double.parseDouble(a+"")+Double.parseDouble(b+""));
                    } 
                    postfija+=" + ";
                    :} 
|TERMINO:a MINUS TERMINO:b 
                    {:
                    if(!flag){
                        RESULT=String.valueOf(Double.parseDouble(a+"")-Double.parseDouble(b+""));
                    } 
                    postfija+=" - ";
                    :}
|TERMINO:a PRODUCT TERMINO:b 
                    {:
                    if(!flag){
                        RESULT=String.valueOf(Double.parseDouble(a+"")*Double.parseDouble(b+""));
                    } 
                    postfija+=" * ";
                    :}
|TERMINO:a DIVISION TERMINO:b 
                    {:
                    if(!flag){
                        RESULT=String.valueOf(Double.parseDouble(a+"")/Double.parseDouble(b+""));
                    } 
                    postfija+=" / ";
                    :}
|IZQ TERMINO:a DER 
                    {:
                    RESULT=a;
                    :}
|NUMBER:a 
                    {:
                    RESULT=a;
                    postfija+=" "+String.valueOf(a)+" ";
                    :}
|LETTER:a 
                    {:
                    flag=true;
                    RESULT=a; 
                    postfija+=" "+ String.valueOf(a)+" ";
                    :};






